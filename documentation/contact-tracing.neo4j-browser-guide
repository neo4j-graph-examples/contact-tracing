<style type="text/css" media="screen">
/*
.nodes-image {
	margin:-100;
}
*/	
@import url("//maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css");

.imageblock .content img, .image img {max-width: 900px;max-height: 300px;}
.deck h3, .deck h4 {display: block !important;margin-bottom:8px;margin-top:5px;}
.listingblock {margin:8px;}
.pull-bottom {position:relative;bottom:1em;}
.admonitionblock td.icon [class^="fa icon-"]{font-size:2.5em;text-shadow:1px 1px 2px rgba(0,0,0,.5);cursor:default}
.admonitionblock td.icon .icon-note:before{content:"\f05a";color:#19407c}
.admonitionblock td.icon .icon-tip:before{content:"\f0eb";text-shadow:1px 1px 2px rgba(155,155,0,.8);color:#111}
.admonitionblock td.icon .icon-warning:before{content:"\f071";color:#bf6900}
.admonitionblock td.icon .icon-caution:before{content:"\f06d";color:#bf3400}
.admonitionblock td.icon .icon-important:before{content:"\f06a";color:#bf0000}
.admonitionblock.note.speaker { display:none; }
</style>
<style type="text/css" media="screen">
/* #editor.maximize-editor .CodeMirror-code { font-size:24px; line-height:26px; } */
</style>
<article class="guide" ng-controller="AdLibDataController">
  <carousel class="deck container-fluid">
    <!--slide class="row-fluid">
      <div class="col-sm-3">
        <h3>A Neo4j Browser Guide to explore a Contact Tracing database</h3>
        <p class="lead">Information</p>
			<!dl>
				
				
				
				
				
			</dl>
		</div>
      <div class="col-sm-9">
        <figure>
          <img style="width:300px" src=""/>
        </figure>
      </div>
    </slide-->
    


   <h4>A Neo4j Browser Guide to explore a Contact Tracing database</h4>
   


<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Contact Tracing - Background</h3>
    <br/>
    <div>
      <div class="imageblock" style="float: right;">
<div class="content">
<img src="https://guides.neo4j.com/sandbox/contact-tracing/img/tracing.jpg" alt="tracing" width="400">
</div>
</div>
<div class="paragraph">
<p>This Sandbox is based on a series of blog posts about Contact Tracing With Neo4j written by <a href="https://twitter.com/rvanbruggen^">Rik Van Bruggen</a>. For more detail please refer to:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://blog.bruggen.com/2020/04/covid-19-contact-tracing-blogpost-part.html" target="_blank">Part 1</a>: How to create a synthetic dataset and import that into Neo4j</p>
</li>
<li>
<p><a href="https://blog.bruggen.com/2020/04/covid-19-contact-tracing-blogpost-part_21.html" target="_blank">Part 2</a>: How to start running some interesting queries on the dataset. Understand some of the interesting data points in there and questions that one might ask</p>
</li>
<li>
<p><a href="https://blog.bruggen.com/2020/04/covid-19-contact-tracing-blogpost-part_61.html" target="_blank">Part 3</a>: How to use Graph Data Science on this dataset, and understand some of the predictive metrics like PageRank, Betweenness Centrality and use community detection to direct policies.</p>
</li>
<li>
<p><a href="https://blog.bruggen.com/2020/04/covid-19-contact-tracing-blogpost-part_0.html" target="_blank">Part 4</a>: A number of loose ends touched on during exploration of the dataset - but surely not exhaustive.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>In this guide we show you the statements in an orderly sequence. First we start with basic Cypher queries to answer questions about finding sick people, where they&#8217;ve traveled and who they may have infected. We then see how to use the Neo4j Graph Data Science library to use graph algorithms to find superspreaders and communities within the graph that can inform policy decisions. Finally we use Neo4j Bloom to visualize the graph, including the results of algorithms.</p>
</div>
<div class="paragraph">
<p>Let&#8217;s get started.</p>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Contact Tracing - The Data Model</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>First, let&#8217;s look at the data model of the synthetic dataset.</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->CALL db.schema.visualization()<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p>By running the <code>db.schema.visualization</code> procedure we can see the node labels and relationship types used in the dataset.</p>
</div>
<div class="paragraph">
<p><strong>How many sick and healthy people in the dataset?</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person)
RETURN DISTINCT p.healthstatus, count(*);<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Querying Data - Potential Infection Spread</h3>
    <br/>
    <div>
      <div class="paragraph">
<p><strong>Who has a sick person potentially infected?</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person {healthstatus:"Sick"})
WITH p LIMIT 1
MATCH (p)--(v1:Visit)--(pl:Place)--(v2:Visit)--(p2:Person {healthstatus:"Healthy"})
RETURN p.name as Spreader, v1.starttime as SpreaderStarttime, v2.endtime as SpreaderEndtime, pl.name as PlaceVisited, p2.name as Target, v2.starttime as TargetStarttime, v2.endtime as TargetEndttime;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Who has a sick person potentially infected? Visual result</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person {healthstatus:"Sick"})
WITH p LIMIT 1
MATCH path = (p)--&gt;(v1:Visit)--&gt;(pl:Place)&lt;--(v2:Visit)&lt;--(p2:Person {healthstatus:"Healthy"})
RETURN path;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p><strong>We can simplify the query using the <code>VISITS</code> relationship</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person {healthstatus:"Sick"})
WITH p LIMIT 1
MATCH path = (p)-[:VISITS]-&gt;(pl:Place)&lt;-[:VISITS]-(p2:Person {healthstatus:"Healthy"})
RETURN path;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Potential Infection Spread - With Time Overlap</h3>
    <br/>
    <div>
      <div class="paragraph">
<p><strong>Including Time Overlap</strong></p>
</div>
<div class="paragraph">
<p>The latest of start times must occur before (or at the same time) as the earliest of the end times for the ranges to overlap.</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person {healthstatus:"Sick"})--&gt;(v1:Visit)--&gt;(pl:Place)
WITH p,v1,pl LIMIT 10
MATCH path = (p)--&gt;(v1)--&gt;(pl)&lt;--(v2:Visit)&lt;--(p2:Person {healthstatus:"Healthy"})
WITH path, apoc.coll.max([v1.starttime.epochMillis, v2.starttime.epochMillis]) as maxStart,
     apoc.coll.min([v1.endtime.epochMillis, v2.endtime.epochMillis]) as minEnd
WHERE maxStart &lt;= minEnd
RETURN path;<!--/code--></pre>
</div>
</div>
<br><br>
<div class="paragraph">
<p><strong>Simplify With <code>VISITS</code> Relationship</strong></p>
</div>
<div class="paragraph">
<p>Who has a sick person infected - with time overlap and simplified with the <code>VISITS</code> relationship. The latest of start times must occur before (or at the same time) as the earliest of the end times for the ranges to overlap.</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person {healthstatus:"Sick"})-[v1:VISITS]-&gt;(pl:Place)
WITH p,v1,pl LIMIT 10
MATCH path = (p)-[v1]-&gt;(pl)&lt;-[v2:VISITS]-(p2:Person {healthstatus:"Healthy"})
WITH path, apoc.coll.max([v1.starttime.epochMillis, v2.starttime.epochMillis]) as maxStart,
     apoc.coll.min([v1.endtime.epochMillis, v2.endtime.epochMillis]) as minEnd
WHERE maxStart &lt;= minEnd
RETURN path;<!--/code--></pre>
</div>
</div>
<br><br>
<div class="paragraph">
<p><strong>With Time Overlap +/- 2 Hours</strong></p>
</div>
<div class="paragraph">
<p>Who has a sick person infected - with time overlap +/- 2hrs. The latest of start times must occur before (or at the same time) as the earliest of the end times for the ranges to overlap.</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person {healthstatus:"Sick"})--&gt;(s1:Visit)--&gt;(pl:Place)
WITH p,s1,pl LIMIT 10
MATCH path = (p)--&gt;(s1)--&gt;(pl)&lt;--(s2:Visit)&lt;--(p2:Person {healthstatus:"Healthy"})
WITH path, apoc.coll.max([s1.starttime.epochMillis, s2.starttime.epochMillis]) as maxStart,
     apoc.coll.min([s1.endtime.epochMillis, s2.endtime.epochMillis]) as minEnd
WHERE maxStart-720000 &lt;= minEnd+720000
RETURN path;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Tracking Visits By Sick Persons</h3>
    <br/>
    <div>
      <div class="paragraph">
<p><strong>Find sick person that has visited places since being infected</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person {healthstatus:"Sick"})-[v:VISITS]-&gt;(pl:Place)
WHERE p.confirmedtime &lt; v.starttime
RETURN p, v, pl LIMIT 10;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Find connections between sick people</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p1:Person {healthstatus:"Sick"}),(p2:Person {healthstatus:"Sick"})
WHERE id(p1)&lt;id(p2)
WITH p1, p2
MATCH path = allshortestpaths ((p1)-[*]-(p2))
RETURN path LIMIT 10;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Measuring Infection Risk - Time Overlap</h3>
    <br/>
    <div>
      <div class="paragraph">
<p><strong>Which healthy person has the highest risk?</strong></p>
</div>
<div class="paragraph">
<p>We can compute this based on the amount of time overlapped with sick people.</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (hp:Person {healthstatus:"Healthy"})-[v1:VISITS]-&gt;(pl:Place)&lt;-[v2:VISITS]-(sp:Person {healthstatus:"Sick"})
WITH hp, apoc.coll.max([v1.starttime.epochMillis, v2.starttime.epochMillis]) AS maxStart,
     apoc.coll.min([v1.endtime.epochMillis, v2.endtime.epochMillis]) AS minEnd
WHERE maxStart &lt;= minEnd
RETURN hp.name, hp.healthstatus, sum(minEnd-maxStart) AS overlaptime
ORDER BY overlaptime DESC;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Which healthy person has the highest risk? Visual results</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (hp:Person {healthstatus:"Healthy"})-[v1:VISITS]-&gt;(pl:Place)&lt;-[v2:VISITS]-(sp:Person {healthstatus:"Sick"})
WITH hp, apoc.coll.max([v1.starttime.epochMillis, v2.starttime.epochMillis]) AS maxStart,
     apoc.coll.min([v1.endtime.epochMillis, v2.endtime.epochMillis]) AS minEnd
WHERE maxStart &lt;= minEnd
WITH hp, sum(minEnd-maxStart) AS overlaptime
ORDER BY overlaptime DESC
LIMIT 10
MATCH (hp)-[v]-(pl:Place)
RETURN hp,v,pl;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Measuring Infection Risk - Places</h3>
    <br/>
    <div>
      <div class="paragraph">
<p><strong>Places with most sick visits.</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person {healthstatus:"Sick"})-[v:VISITS]-&gt;(pl:Place)
WITH DISTINCT pl.name as placename, count(v) AS nrofsickvisits, apoc.node.degree.in(pl,'VISITS') AS totalnrofvisits
ORDER BY nrofsickvisits DESC LIMIT 10
RETURN placename, nrofsickvisits, totalnrofvisits, round(toFloat(nrofsickvisits)/toFloat(totalnrofvisits)*10000)/100 AS percentageofsickvisits;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Places with most sick visits. Visual result</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person {healthstatus:"Sick"})-[v:VISITS]-&gt;(pl:Place)
WITH DISTINCT pl.name as placename, count(v) AS nrofsickvisits, pl
ORDER BY nrofsickvisits DESC
LIMIT 10
MATCH (pl)&lt;-[v]-(p:Person)
RETURN pl,p,v;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Graph Data Science on the Contact Tracing Graph</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>The Neo4j Graph Data Science (GDS) library allows us to run graph algorithms like centralities, community detection, similarity metics and more. Let&#8217;s see how we can use GDS on our Contact Tracing dataset.</p>
</div>
<div class="paragraph">
<p><strong>REQUIREMENT: create the MEETS relationship based on overlap time</strong></p>
</div>
<div class="paragraph">
<p>This is a relationship between two PERSON nodes that we will need for our graph data science exercises so be sure to run this Cypher query before moving forward</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p1:Person)-[v1:VISITS]-&gt;(pl:Place)&lt;-[v2:VISITS]-(p2:Person)
WHERE id(p1)&lt;id(p2)
WITH p1, p2, apoc.coll.max([v1.starttime.epochMillis, v2.starttime.epochMillis]) AS maxStart,
    apoc.coll.min([v1.endtime.epochMillis, v2.endtime.epochMillis]) AS minEnd
WHERE maxStart &lt;= minEnd
WITH p1, p2, sum(minEnd-maxStart) AS meetTime
CREATE (p1)-[:MEETS {meettime: duration({seconds: meetTime/1000})}]-&gt;(p2);<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Graph Data Science: PageRank</h3>
    <br/>
    <div>
      <div class="paragraph">
<p><strong>Computing PageRank of Person Nodes</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->CALL gds.graph.project('meetings', 'Person', 'MEETS')<!--/code--></pre>
</div>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->CALL gds.pageRank.write(
  'meetings',
  {writeProperty: 'pagerank'}
)<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Graph Data Science: PageRank</h3>
    <br/>
    <div>
      <div class="paragraph">
<p><strong>Look at the top Person nodes by PageRank - tabular results</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person) WHERE EXISTS(p.pagerank)
RETURN p.name as name, p.pagerank AS pagerank
ORDER BY pagerank DESC LIMIT 10;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Look at the top <code>Person</code> nodes by PageRank - graph results</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person) WHERE EXISTS(p.pagerank)
WITH p, p.pagerank AS score
ORDER BY score DESC LIMIT 10
MATCH (p)-[r]-(conn)
RETURN p, r, conn;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Graph Data Science: Betweenness Centrality</h3>
    <br/>
    <div>
      <div class="paragraph">
<p><strong>Compute Betweenness Centrality</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->CALL gds.betweenness.write(
  'meetings',
  {writeProperty: 'betweenness'}
)<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Graph Data Science: Betweenness Centrality</h3>
    <br/>
    <div>
      <div class="paragraph">
<p><strong>Look at the top <code>Person</code> nodes by betweenness centrality - tabular results</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person) WHERE EXISTS(p.betweenness)
RETURN p.name as name, p.pagerank AS pagerank, p.betweenness AS betweenness
ORDER BY betweenness DESC
LIMIT 10;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Look at the top <code>Person</code> nodes by betweeness centrality - graph results</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person) WHERE EXISTS(p.betweenness)
WITH p, p.betweenness AS score
ORDER BY score DESC LIMIT 10
MATCH (p)-[r]-(conn)
RETURN p, r, conn;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Graph Data Science: Louvain Community Detection</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>Since the Louvain algorithm can take advantage of relationship weights, let&#8217;s add a relationship property to our <code>MEETS</code> relationship.</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH p=()-[r:MEETS]-&gt;()
SET r.meettimeinseconds = r.meettime.seconds;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Now we can calculate communities using the Louvain algorithm</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->CALL gds.graph.project(
  'meetings_with_time',
  'Person',
  {
    MEETS: {
      orientation: 'UNDIRECTED',
      properties:
        {weight:
          {
            property: 'meettimeinseconds',
            default: 1
          }
        }
    }
  }
)<!--/code--></pre>
</div>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->CALL gds.louvain.write(
  'meetings_with_time',
  {writeProperty: 'community'}
)<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Graph Data Science - Louvain Community Detection</h3>
    <br/>
    <div>
      <div class="paragraph">
<p><strong>What are the different communities?</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (p:Person)
RETURN DISTINCT p.community, count(p)
ORDER BY COUNT(p) DESC;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Neo4j Bloom</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>So far we&#8217;ve seen how to visualize query results in Neo4j Browser, however we are somewhat limited in the types of visualization available in Neo4j Browser. Fortunately we can use Neo4j Bloom to explore the graph visually, especially taking into account the results of graph algorithms in the visualization.</p>
</div>
<div class="paragraph">
<p>Let&#8217;s switch over to Neo4j Bloom to explore some powerful graph visualizations.</p>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Resources</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>Resources to learn more:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="http://blog.bruggen.com" target="_blank">Rik&#8217;s blog</a></p>
</li>
<li>
<p><a href="https://twitter.com/rvanbruggen" target="_blank">Rik on Twitter</a></p>
</li>
<li>
<p><a href="http://graphistania.com" target="_blank">The Graphistania podcast</a></p>
</li>
</ul>
</div>
	</div>
  </div>
</slide>
  </carousel>
</article>